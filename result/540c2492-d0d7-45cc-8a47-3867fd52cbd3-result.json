{"name": "test_add_member_from_memberlistpage", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=114.0.5735.198)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x005AA813+48355]\n\t(No symbol) [0x0053C4B1]\n\t(No symbol) [0x00445358]\n\t(No symbol) [0x004487A1]\n\t(No symbol) [0x004499E1]\n\t(No symbol) [0x00449A80]\n\t(No symbol) [0x00471D29]\n\t(No symbol) [0x00469DAD]\n\t(No symbol) [0x0048A73C]\n\t(No symbol) [0x00469A36]\n\t(No symbol) [0x0048AA94]\n\t(No symbol) [0x0049C922]\n\t(No symbol) [0x0048A536]\n\t(No symbol) [0x004682DC]\n\t(No symbol) [0x004693DD]\n\tGetHandleVerifier [0x0080AABD+2539405]\n\tGetHandleVerifier [0x0084A78F+2800735]\n\tGetHandleVerifier [0x0084456C+2775612]\n\tGetHandleVerifier [0x006351E0+616112]\n\t(No symbol) [0x00545F8C]\n\t(No symbol) [0x00542328]\n\t(No symbol) [0x0054240B]\n\t(No symbol) [0x00534FF7]\n\tBaseThreadInitThunk [0x76787D59+25]\n\tRtlInitializeExceptionChain [0x77AEB74B+107]\n\tRtlClearBits [0x77AEB6CF+191]", "trace": "self = <testcase.test_add_member.TestAddMember object at 0x00000287F849E5E0>\n\n    @allure.story(\"通讯录入口添加成员\")\n    def test_add_member_from_memberlistpage(self):\n>       result = self.home.click_menu_contacts(). \\\n            click_add_member_btn(). \\\n            edit_member_and_save(self.fk.get_random_name(), self.fk.get_random_id(),\n                                 self.fk.get_random_phone()). \\\n            get_tips()\n\ntestcase\\test_add_member.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\member_list_page.py:21: in click_add_member_btn\n    self.web_wait(self.__BTN_ADD_MEMBER, AddMemberPage(self.driver).get_attribute_input_username())\npage\\base.py:68: in web_wait\n    return WebDriverWait(self.driver, 20).until(self.double_click(click_ele, ele))\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:78: in until\n    value = method(self._driver)\npage\\base.py:72: in _inner\n    self.do_find(*click_ele).click()\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:89: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:773: in _execute\n    return self._parent.execute(command, params)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:430: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000287F84F4880>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...dInitThunk [0x76787D59+25]\\\\n\\\\tRtlInitializeExceptionChain [0x77AEB74B+107]\\\\n\\\\tRtlClearBits [0x77AEB6CF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=114.0.5735.198)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x005AA813+48355]\nE       \t(No symbol) [0x0053C4B1]\nE       \t(No symbol) [0x00445358]\nE       \t(No symbol) [0x004487A1]\nE       \t(No symbol) [0x004499E1]\nE       \t(No symbol) [0x00449A80]\nE       \t(No symbol) [0x00471D29]\nE       \t(No symbol) [0x00469DAD]\nE       \t(No symbol) [0x0048A73C]\nE       \t(No symbol) [0x00469A36]\nE       \t(No symbol) [0x0048AA94]\nE       \t(No symbol) [0x0049C922]\nE       \t(No symbol) [0x0048A536]\nE       \t(No symbol) [0x004682DC]\nE       \t(No symbol) [0x004693DD]\nE       \tGetHandleVerifier [0x0080AABD+2539405]\nE       \tGetHandleVerifier [0x0084A78F+2800735]\nE       \tGetHandleVerifier [0x0084456C+2775612]\nE       \tGetHandleVerifier [0x006351E0+616112]\nE       \t(No symbol) [0x00545F8C]\nE       \t(No symbol) [0x00542328]\nE       \t(No symbol) [0x0054240B]\nE       \t(No symbol) [0x00534FF7]\nE       \tBaseThreadInitThunk [0x76787D59+25]\nE       \tRtlInitializeExceptionChain [0x77AEB74B+107]\nE       \tRtlClearBits [0x77AEB6CF+191]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: StaleElementReferenceException"}, "steps": [{"name": "点击菜单：通讯录", "status": "passed", "start": 1688109915766, "stop": 1688109915825}, {"name": "点击【添加成员】按钮", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=114.0.5735.198)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x005AA813+48355]\n\t(No symbol) [0x0053C4B1]\n\t(No symbol) [0x00445358]\n\t(No symbol) [0x004487A1]\n\t(No symbol) [0x004499E1]\n\t(No symbol) [0x00449A80]\n\t(No symbol) [0x00471D29]\n\t(No symbol) [0x00469DAD]\n\t(No symbol) [0x0048A73C]\n\t(No symbol) [0x00469A36]\n\t(No symbol) [0x0048AA94]\n\t(No symbol) [0x0049C922]\n\t(No symbol) [0x0048A536]\n\t(No symbol) [0x004682DC]\n\t(No symbol) [0x004693DD]\n\tGetHandleVerifier [0x0080AABD+2539405]\n\tGetHandleVerifier [0x0084A78F+2800735]\n\tGetHandleVerifier [0x0084456C+2775612]\n\tGetHandleVerifier [0x006351E0+616112]\n\t(No symbol) [0x00545F8C]\n\t(No symbol) [0x00542328]\n\t(No symbol) [0x0054240B]\n\t(No symbol) [0x00534FF7]\n\tBaseThreadInitThunk [0x76787D59+25]\n\tRtlInitializeExceptionChain [0x77AEB74B+107]\n\tRtlClearBits [0x77AEB6CF+191]\n\n", "trace": "  File \"D:\\pycharm\\Selenium\\page\\member_list_page.py\", line 21, in click_add_member_btn\n    self.web_wait(self.__BTN_ADD_MEMBER, AddMemberPage(self.driver).get_attribute_input_username())\n  File \"D:\\pycharm\\Selenium\\page\\base.py\", line 68, in web_wait\n    return WebDriverWait(self.driver, 20).until(self.double_click(click_ele, ele))\n  File \"D:\\pycharm\\Selenium\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 78, in until\n    value = method(self._driver)\n  File \"D:\\pycharm\\Selenium\\page\\base.py\", line 72, in _inner\n    self.do_find(*click_ele).click()\n  File \"D:\\pycharm\\Selenium\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 89, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\pycharm\\Selenium\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 773, in _execute\n    return self._parent.execute(command, params)\n  File \"D:\\pycharm\\Selenium\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 430, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\pycharm\\Selenium\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 247, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1688109915908, "stop": 1688109916025}], "attachments": [{"name": "log", "source": "bb476b00-4e95-46ef-86b8-94b80a36554a-attachment.txt", "type": "text/plain"}], "start": 1688109915766, "stop": 1688109916027, "uuid": "cf28c761-5a51-42e2-ac7d-0e430e8acd5d", "historyId": "3aba508366900283d13031bd490b5cdf", "testCaseId": "3aba508366900283d13031bd490b5cdf", "fullName": "testcase.test_add_member.TestAddMember#test_add_member_from_memberlistpage", "labels": [{"name": "feature", "value": "添加成员"}, {"name": "story", "value": "通讯录入口添加成员"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_add_member"}, {"name": "subSuite", "value": "TestAddMember"}, {"name": "host", "value": "DESKTOP-7Q67NG8"}, {"name": "thread", "value": "13628-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_add_member"}]}